@page "/userData"
@using IMaoTai.Core
@using System.Timers
@using IMaoTai.Core.Entity
@using IMaoTai.Core.Domain
@using IMaoTai.Core.Service
@inject IMaoTai.Core.Service.IUserService _userService
@implements IDisposable

<PageTitle>用户管理</PageTitle>

<h1>用户管理</h1>

@if (_userList == null)
{
    <p><em>Loading...</em></p>
}
else
{
  <MCard>
    <MCardTitle>
        查询条件
        <MSpacer></MSpacer>
            <MTextField @bind-Value="_search.Phone"
                    Label="手机号"
                    SingleLine
                    HideDetails="true"></MTextField>
            <MTextField @bind-Value="_search.UserId"
                        Label="i茅台用户ID"
                        SingleLine
                        HideDetails="true"></MTextField>
            <MTextField @bind-Value="_search.Province"
                        Label="省份"
                        SingleLine
                        HideDetails="true"></MTextField>
            <MTextField @bind-Value="_search.City"
                        Label="城市"
                        SingleLine
                        HideDetails="true"></MTextField>
      </MCardTitle>
        <MRow Align="@AlignTypes.Center"
              Justify="@JustifyTypes.Center">
            <MToolbar>
                <MButton Depressed Color="primary"
                         Dark
                         Class="ma-2 white--text"
                         OnClick="GetUserListDataFromApi">
                    搜索
                </MButton> 
                <MButton Depressed Color="primary"
                         Dark
                         Class="ma-2 white--text"
                         OnClick="ClearSearch">
                    重置
                </MButton>    
                <MButton Depressed Color="indigo"
                         Dark
                         Class="ma-2 white--text"
                         OnClick="RegisterOpen">
                    添加账号
                </MButton>     
                <MButton Depressed Color="cyan"
                         Dark
                         Class="ma-2 white--text"
                         OnClick="()=>_dialog=true">
                    直接新增
                </MButton>
            </MToolbar>
        </MRow>
        <MDataTable Headers="_headers" DisableFiltering
          Items="_userList" 
         Id="UserId" ItemKey="(a)=>{ return a.UserId.ToString(); }" 
         ShowSelect="true"
                Page="@_page"
                ItemsPerPage="@_itemsPerPage"
                OnOptionsUpdate="@HandleOnOptionsUpdate"
                ServerItemsLength="@_total"
                Loading="_loading"
                Class="elevation-1">
        <ItemColContent>
            @if (context.Header.Value == "actions")
            {
                 <MButton Small
                           Class="mr-2"
                             OnClick="()=>ReserveItem(context.Item)">预约</MButton>
                <MIcon Small
                       Class="mr-2"
                       OnClick="()=>EditItem(context.Item)">mdi-pencil</MIcon>
                 <MButton Small
                        Class="mr-2"
                             OnClick="()=>RealNameAuthItem(context.Item)">实名认证</MButton>
                <MIcon Small
                       OnClick="()=>DeleteItem(context.Item)">mdi-delete</MIcon>
            }
            else
            {
                @context.Value
            }
        </ItemColContent>
        <NoDataContent>
                暂无数据.......
        </NoDataContent>
    </MDataTable>
  </MCard>

    //新增/编辑弹框
    <MDialog @bind-Value="_dialog"
             MaxWidth="500">
        <MCard>
            <MCardTitle>
                <span class="text-h5">@FormTitle</span>
            </MCardTitle>

            <MCardText>
                <MContainer>
                    <MRow>
                        <MCol Cols="12"
                              Sm="6"
                              Md="4">
                            <MTextField @bind-Value="_editedItem.Mobile"
                                        Label="手机号"></MTextField>
                        </MCol>
                        <MCol Cols="12"
                              Sm="6"
                              Md="4">
                            <MTextField @bind-Value="_editedItem.UserId"
                                        Label="i茅台用户id"></MTextField>
                        </MCol>
                        <MCol Cols="12"
                              Sm="6"
                              Md="4">
                            <MTextField @bind-Value="_editedItem.Token"
                                        Label="Token"></MTextField>
                        </MCol>
                        <MCol Cols="12"
                              Sm="6"
                              Md="4">
                            <MTextField @bind-Value="_editedItem.ItemCode"
                                        Label="预约商品Code,用@间隔"></MTextField>
                        </MCol>
                        <MCol Cols="12"
                              Sm="6"
                              Md="4">
                            <MTextField @bind-Value="_editedItem.ProvinceName"
                                        Label="省份"></MTextField>
                        </MCol>
                        <MCol Cols="12"
                              Sm="6"
                              Md="4">
                            <MTextField @bind-Value="_editedItem.CityName"
                                        Label="城市"></MTextField>
                        </MCol>
                        <MCol Cols="12"
                              Sm="6"
                              Md="4">
                            <MTextField @bind-Value="_editedItem.ShopType"
                                        Label="类型=>1:预约本市出货量最大的门店;2:预约你的位置(经纬度)附近门店;"></MTextField>
                        </MCol>
                        <MCol Cols="12"
                              Sm="6"
                              Md="4">
                            <MTextField @bind-Value="_editedItem.Lng"
                                        Label="请输入经度(eg:114.48)"></MTextField>
                        </MCol>
                        <MCol Cols="12"
                              Sm="6"
                              Md="4">
                            <MTextField @bind-Value="_editedItem.Lat"
                                        Label="请输入纬度(eg:36.62)"></MTextField>
                        </MCol>
                        <MCol Cols="12"
                              Sm="6"
                              Md="4">
                            <MMenu @bind-Value="_menu"
                                   CloseOnContentClick="false"
                                   Transition="scale-transition"
                                   OffsetY
                                   MinWidth="@("auto")">
                                <ActivatorContent>
                                    <MTextField @bind-Value="_editedItem.ExpireTime"
                                                Label="到期时间"
                                                PrependIcon="mdi-calendar"
                                                Readonly
                                                @attributes="context.Attrs"></MTextField>
                                </ActivatorContent>
                                <ChildContent>
                                    <MDatePicker @bind-Value="_date"
                                                 NoTitle
                                                 Scrollable>
                                        <MSpacer></MSpacer>
                                        <MButton Text
                                                 Color="primary"
                                                 OnClick="MenuCancel">
                                            取消
                                        </MButton>
                                        <MButton Text
                                                 Color="primary"
                                                 OnClick="MenuOK">
                                            确认
                                        </MButton>
                                    </MDatePicker>
                                </ChildContent>
                            </MMenu>
                        </MCol>
                    </MRow>
                </MContainer>
            </MCardText>

            <MCardActions>
                <MSpacer></MSpacer>
                <MButton Color="blue darken-1"
                         Text
                         OnClick="Close">
                    取消
                </MButton>
                <MButton Color="blue darken-1"
                         Text
                         OnClick="Save">
                    保存
                </MButton>
            </MCardActions>

        </MCard>
    </MDialog>
    //删除弹框
    <MDialog @bind-Value="_dialogDelete" MaxWidth="500">
        <MCard>
            <MCardTitle Class="text-h5">是否确认删除该项?</MCardTitle>
            <MCardActions>
                <MSpacer></MSpacer>
                <MButton Color="blue darken-1" Text OnClick="CloseDelete">取消</MButton>
                <MButton Color="blue darken-1" Text OnClick="DeleteItemConfirm">确定</MButton>
                <MSpacer></MSpacer>
            </MCardActions>
        </MCard>
    </MDialog>
    //账号注册
    <MDialog @bind-Value="_dialogRegister"
             MaxWidth="500">
        <MCard>
            <MCardTitle>
                <span class="text-h5">添加\更新用户</span>
            </MCardTitle>

            <MCardText>
                <MContainer>
                    <MRow>
                        <MCol Cols="50"
                              Sm="6"
                              Md="4">
                            <PBlockText Primary="手机号">
                            </PBlockText>
                            <MTextField @bind-Value="_registerItem.Mobile"
                                        Label="请输入i茅台手机号">
                                    </MTextField>
                        </MCol>
                        <MCol Cols="20"
                              Sm="6"
                              Md="4">
                            <MButton Depressed Color="cyan" Dark
                                     OnClick="SendPhoneCodeBtn" Disabled="_sendCodeDisabled">
                                @_sendPhoneCodeBtnTxt
                            </MButton>
                        </MCol>
                    </MRow>
                    <MRow>
                        <MCol Cols="50"
                              Sm="6"
                              Md="4">
                            <PBlockText Primary="验证码">
                            </PBlockText>
                            <MTextField @bind-Value="_registerItem.Code"
                                        Label="请输入验证码"></MTextField>
                        </MCol>
                    </MRow>
                </MContainer>
            </MCardText>

            <MCardActions>
                <MSpacer></MSpacer>
                <MButton Color="blue darken-1"
                         Text
                         OnClick="Close">
                    取消
                </MButton>
                <MButton Color="blue darken-1"
                         Text
                         OnClick="LoginRegisterUser">
                    保存
                </MButton>
            </MCardActions>

        </MCard>
    </MDialog>

    //实名认证弹框
    <MDialog @bind-Value="_dialogRealNameAuth"
             MaxWidth="500">
        <MCard>
            <MCardTitle>
                <span class="text-h5">实名认证</span>
            </MCardTitle>

            <MCardText>
                <MContainer>
                    <MRow>
                        <MCol Cols="12"
                              Sm="6"
                              Md="4">
                            <MTextField @bind-Value="_editedItem.Mobile" Readonly
                                        Label="手机号"></MTextField>
                        </MCol>
                        <MCol Cols="12"
                              Sm="6"
                              Md="4">
                            <MTextField @bind-Value="_editedItem.UserId" Readonly
                                        Label="i茅台用户id"></MTextField>
                        </MCol>
                        <MCol Cols="12"
                              Sm="6"
                              Md="4">
                            <MTextField @bind-Value="_editedItem.IdCardName"
                                        Label="姓名"></MTextField>
                        </MCol>
                        <MCol Cols="12"
                              Sm="6"
                              Md="4">
                            <MTextField @bind-Value="_editedItem.IdCardNo"
                                        Label="身份证"></MTextField>
                        </MCol>
                    </MRow>
                </MContainer>
            </MCardText>

            <MCardActions>
                <MSpacer></MSpacer>
                <MButton Color="blue darken-1"
                         Text
                         OnClick="CloseRealNameAuth">
                    取消
                </MButton>
                <MButton Color="blue darken-1"
                         Text
                         OnClick="RealNameAuthSave">
                    保存
                </MButton>
            </MCardActions>

        </MCard>
    </MDialog>

    //告警弹窗
    <MDialog @bind-Value="_dialogWarn"
             Width="400">
        <ChildContent>
            <MCard>
                <MCardTitle>
                    提示
                </MCardTitle>

                <MCardText Class="grow">
                    @_warnMsg
                </MCardText>
                <MDivider></MDivider>
                <MCardActions>
                    <MSpacer></MSpacer>
                    <MButton Color="primary"
                             Text
                             OnClick="() => _dialogWarn = false">
                        关闭
                    </MButton>
                </MCardActions>
            </MCard>
        </ChildContent>
    </MDialog>
}

@code {
    private List<UserEntity> _userList = new List<UserEntity>();
    private UserManageViewModel _search = new UserManageViewModel();
    private int _total;
    private bool _loading = true;
    private int _itemsPerPage = 10;
    private int _page = 1;
    private DataOptions _options = new(1, 10);

    private List<DataTableHeader<UserEntity>> _headers = new()
    {
        new() { Text = "手机号", Value = nameof(UserEntity.Mobile) },
        new() { Text = "预约茅台ID", Value = nameof(UserEntity.UserId),Ellipsis = new DataTableEllipsis() },
        new() { Text = "Token", Value = nameof(UserEntity.Token),Ellipsis = new DataTableEllipsis() },
        new() { Text = "预约项目Code", Value = nameof(UserEntity.ItemCode),Ellipsis = new DataTableEllipsis()},
        new() { Text = "省份", Value = nameof(UserEntity.ProvinceName) },
        new() { Text = "城市", Value = nameof(UserEntity.CityName) },
        new() { Text = "经度", Value = nameof(UserEntity.Lng) },
        new() { Text = "纬度", Value = nameof(UserEntity.Lat) },
        new() { Text = "店铺类型", Value = nameof(UserEntity.ShopType) },
        new() { Text = "到期时间", Value = nameof(UserEntity.ExpireTime) },
        new() { Text = "操作", Value = "actions",Sortable=false },
    };

    private bool _dialogWarn;
    private bool _dialog;
    private bool _dialogRegister;
    private bool _dialogDelete;
    private bool _dialogRealNameAuth;
    private UserEntity _editedItem = new UserEntity();
    private int _editedIndex = -1;
    private Timer timer = new(1000);
    private int _remainingTime;
    private bool _sendCodeDisabled = false;
    private string _sendPhoneCodeBtnTxt = "发送验证码";
    private RegisterModel _registerItem = new RegisterModel();
    private string _warnMsg;

    public string FormTitle
    {
        get
        {
            return _editedIndex == -1 ? "新建用户" : "编辑用户";
        }
    }

    public void Close()
    {
        _dialog = false;
        _dialogRegister = false;
        _editedItem = new UserEntity();
        _editedIndex = -1;
    }

    public void CloseRealNameAuth()
    {
        _dialog = false;
        _dialogRealNameAuth = false;
        _editedItem = new UserEntity();
        _editedIndex = -1;
    }

    public void ClearSearch()
    {
        _search = new();
        _options.Page = 1;
    }

    //注册用户
    public void RegisterOpen()
    {
        // 创建一个DispatcherTimer实例
      //  timer = new(1000);
        timer.Elapsed += (sender, eventArgs) => Timer_Tick();
        _remainingTime = 0;
        _dialogRegister = true;
    }

    private void Timer_Tick()
    {
        _ = InvokeAsync(() =>
        {
            if (_remainingTime > 0)
            {
                // _sendCodeDisabled = true;
                _remainingTime--; // 每秒减少1秒
                _sendPhoneCodeBtnTxt = $"剩余{_remainingTime}秒...";
                StateHasChanged();
            }
            else
            {
                _sendCodeDisabled = false;
                _sendPhoneCodeBtnTxt = "发送验证码";
                StateHasChanged();
                timer.Stop();
            }
        });
    }

    public void Dispose() => timer.Dispose();

    /// <summary>
    ///发送验证码
    /// </summary>
    /// <returns></returns>
    public async Task SendPhoneCodeBtn()
    {
        if (string.IsNullOrEmpty(_registerItem.Mobile))
        {
            _warnMsg = "手机号不能为空";
            _dialogWarn = true;
            return;
        }
        if (_remainingTime > 0)
        {
            _warnMsg = $"{_remainingTime}秒后再重试";
            _dialogWarn = true;
            return;
        }
        var res = await new IMTService().SendCode(_registerItem.Mobile);
        if (res)
        {
            _remainingTime = 60;
            _sendPhoneCodeBtnTxt = $"剩余{_remainingTime}秒...";
            timer.Start();
        }
    }

    public async Task LoginRegisterUser()
    {
        if (string.IsNullOrEmpty(_registerItem.Mobile))
        {
            _warnMsg = "手机号不能为空";
            _dialogWarn = true;
            return;
        }
        if (string.IsNullOrEmpty(_registerItem.Code))
        {
            _warnMsg = "验证码不能为空";
            _dialogWarn = true;
            return;
        }
        _sendPhoneCodeBtnTxt = "发送验证码";
        _remainingTime = 0;
        timer.Stop();
        StateHasChanged();
        var res = await new IMTService().Login(_registerItem.Mobile, _registerItem.Code);
        _warnMsg = res ? "成功" : "失败";
        _dialogWarn = true;
    }

    /// <summary>
    /// 编辑和新增实际逻辑
    /// </summary>
    public async Task Save()
    {
        (bool, string) resultItem = (false,"");
        if (_editedIndex > -1)//编辑
        {
            // var item = _userList[_editedIndex];
            //只能修改 用户ID，预约code,经度，维度，省份，城市，类型，token
            resultItem = await _userService.ModifyUser(_editedItem);
        }
        else // 新增
        {
            resultItem = await _userService.InsertUser(_editedItem);
        }
        _warnMsg = resultItem.Item1 ? "成功" : "失败";
        _dialogWarn = true;
        if (resultItem.Item1)
        {
            await GetUserListDataFromApi();
            StateHasChanged();
        }
        Close();
    }

    /// <summary>
    ///预约
    /// </summary>
    /// <param name="item"></param>
    public async Task ReserveItem(UserEntity item)
    {
        try
        {
            await IMTService.Reservation(item);
            _warnMsg = "手动发起预约成功,响应结果请查看日志";
        }
        catch (Exception e)
        {
            _warnMsg = "手动发起预约失败,响应结果请查看日志";
        }
        _dialogWarn = true;
    }

    /// <summary>
    ///编辑
    /// </summary>
    /// <param name="item"></param>
    public void EditItem(UserEntity item)
    {
        _editedIndex = _userList.IndexOf(item);
        _editedItem = item;
        _dialog = true;
    }

    /// <summary>
    ///认证
    /// </summary>
    /// <param name="item"></param>
    public void RealNameAuthItem(UserEntity item)
    {
        _editedIndex = _userList.IndexOf(item);
        _editedItem = item;
        _dialogRealNameAuth = true;
    }

    /// <summary>
    /// 认证实际逻辑
    /// </summary>
    public async Task RealNameAuthSave()
    {
        if (string.IsNullOrEmpty(_editedItem.IdCardName))
        {
            _warnMsg = "姓名不能为空";
            _dialogWarn = true;
            return;
        }
        if (string.IsNullOrEmpty(_editedItem.IdCardNo))
        {
            _warnMsg = "身份证不能为空";
            _dialogWarn = true;
            return;
        }
        var resultItem = await _userService.RealNameAuth(_editedItem);
        _warnMsg = resultItem ? "成功" : "失败";
        _dialogWarn = true;
       // CloseRealNameAuth();
    }

    public void DeleteItem(UserEntity item)
    {
        _editedIndex = _userList.IndexOf(item);
        _editedItem = new UserEntity()
        {
           Mobile = item.Mobile,
           UserId = item.UserId
        };
        _dialogDelete = true;
    }

    public async Task DeleteItemConfirm()
    {
        var res = await _userService.DeleteUser(_editedItem);
        if (res)
        {
            await GetUserListDataFromApi();
            StateHasChanged();
        }
        CloseDelete();
    }

    public void CloseDelete()
    {
        _dialogDelete = false;
        _editedItem = new();
        _editedIndex = -1;
    }


    private async Task HandleOnOptionsUpdate(DataOptions options)
    {
        _options = options;
        await GetUserListDataFromApi();
    }


    protected override async Task OnInitializedAsync()
    {
        await GetUserListDataFromApi();
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await GetUserListDataFromApi();
            StateHasChanged();
        }
    }

    /// <summary>
    /// 获取用户列表信息
    /// </summary>
    /// <returns></returns>
    private async Task GetUserListDataFromApi()
    {
        _loading = true;
        _search.Current = _options.Page;
        _search.PageSize = _options.ItemsPerPage;
        var result = await _userService.GetUserList(_search);
        _userList = result.UserList;
        _total = Convert.ToInt32(result.Total);
        _loading = false;
    }


    //日期
    private DateOnly _prevDate = DateOnly.FromDateTime(DateTime.Now);
    private DateOnly _date = DateOnly.FromDateTime(DateTime.Now);
    private bool _menu;
    private bool _modal;

    public void MenuCancel()
    {
        _date = _prevDate;
        _menu = false;
    }

    public void MenuOK()
    {
        _prevDate = _date;
        _editedItem.ExpireTime = Convert.ToDateTime(_date.ToString());
        _menu = false;
    }

    public class RegisterModel
    {
        /// <summary>
        ///手机号
        /// </summary>
        public string Mobile { get; set; }
        //验证码
        public string Code { get; set; }
    }
}
